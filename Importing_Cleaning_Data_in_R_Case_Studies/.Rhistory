knitr::opts_chunk$set(echo = TRUE)
# Import sales.csv: sales
sales <- read.csv("sales.csv", stringsAsFactors = FALSE)
# Import sales.csv: sales
sales <- read.csv("data/sales.csv", stringsAsFactors = FALSE)
str(sales)
glipse(sales)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Import sales.csv: sales
sales <- read.csv("data/sales.csv", stringsAsFactors = FALSE)
str(sales)
glipse(sales)
glimpse(sales)
# Import sales.csv: sales
sales <- read_csv("data/sales.csv")
glimpse(sales)
# View dimensions of sales
dim(sales)
# Inspect first 6 rows of sales
head(sales, n = 6)
# View column names of sales
names(sales)
# View a summary of sales
summary(sales)
dim(sales2)
# Remove the first column of sales: sales2
sales2 <- sales[, -1]
dim(sales2)
# Define a vector of column indices: keep
keep <- 5:(ncol(sales2) - 15)
# Subset sales2 using keep: sales3
sales3 <- sales2[, keep]
glimpse(sales3)
# Split event_date_time: sales4
head(sale4$event_date_time)
# Split event_date_time: sales4
head(sale3$event_date_time)
# Define a vector of column indices: keep
keep <- 5:(ncol(sales2) - 15)
# Subset sales2 using keep: sales3
sales3 <- sales2[, keep]
glimpse(sales3)
# Split event_date_time: sales4
head(sales3$event_date_time)
# Split event_date_time: sales4
head(sales3$event_date_time)
sales4 <- separate(sales3, event_date_time,
c("event_dt", "event_time"), sep = " ")
head(sales4$event_time)
# Split sales_ord_create_dttm: sales5
head(sales4$sales_ord_create_dttm)
# Split sales_ord_create_dttm: sales5
head(sales4$sales_ord_create_dttm)
sales5 <- separate(sales4, sales_ord_create_dttm, c("ord_create_dt", "ord_create_time"), sep = " ")
sales4 <- separate(sales3, event_date_time,
c("event_dt", "event_time"), sep = " ")
sales5 <- separate(sales4, sales_ord_create_dttm, c("ord_create_dt", "ord_create_time"), sep = " ")
# Define an issues vector
issues <- c(2516, 3863, 4082, 4183)
# Print values of sales_ord_create_dttm at these indices
sales3$sales_ord_create_dttm[issues]
# Print a well-behaved value of sales_ord_create_dttm
sales3$sales_ord_create_dttm[2517]
# Split event_date_time: sales4
head(sales3$event_date_time)
sales4 <- separate(sales3, event_date_time,
c("event_dt", "event_time"), sep = " ")
head(sales4$event_time)
# Split sales_ord_create_dttm: sales5
sales5 <- separate(sales4, sales_ord_create_dttm, c("ord_create_dt", "ord_create_time"), sep = " ")
# Define an issues vector
issues <- c(2516, 3863, 4082, 4183)
# Print values of sales_ord_create_dttm at these indices
sales3$sales_ord_create_dttm[issues]
# Print a well-behaved value of sales_ord_create_dttm
sales3$sales_ord_create_dttm[2517]
# Split event_date_time: sales4
head(sales3$event_date_time)
sales4 <- separate(sales3, event_date_time,
c("event_dt", "event_time"), sep = " ")
head(sales4$event_time)
# Split sales_ord_create_dttm: sales5
sales5 <- separate(sales4, sales_ord_create_dttm, c("ord_create_dt", "ord_create_time"), sep = " ")
# Define an issues vector
issues <- c(2516, 3863, 4082, 4183)
# Print values of sales_ord_create_dttm at these indices
sales3$sales_ord_create_dttm[issues]
# Print a well-behaved value of sales_ord_create_dttm
sales3$sales_ord_create_dttm[2517]
# Find columns of sales5 containing "dt": date_cols
date_cols <- str_detect(names(sales5), "dt")
# Load lubridate
library(lubridate)
# Coerce date columns into Date objects
sales5[, date_cols] <- lapply(sales5[, date_cols], ymd)
# Create logical vectors indicating missing values
missing <- lapply(sales5[, date_cols], is.na)
# Create a numerical vector that counts missing values: num_missing
num_missing <- sapply(missing, sum)
# Print num_missing
num_missing
?unit
?unite
# Split event_date_time: sales4
head(sales3$event_date_time)
sales4 <- separate(sales3, event_date_time,
c("event_dt", "event_time"), sep = " ")
head(sales4$event_time)
# Split sales_ord_create_dttm: sales5
sales5 <- separate(sales4, sales_ord_create_dttm, c("ord_create_dt", "ord_create_time"), sep = " ")
# Define an issues vector
issues <- c(2516, 3863, 4082, 4183)
# Print values of sales_ord_create_dttm at these indices
sales3$sales_ord_create_dttm[issues]
# Print a well-behaved value of sales_ord_create_dttm
sales3$sales_ord_create_dttm[2517]
# Combine the venue_city and venue_state columns
sales6 <- unite(data = sales5, col = venue_city_state, venue_city, venue_state, sep = ", ", remove = TRUE)
# View the head of sales6
head(sales6)
# View the head of sales6
head(sales6)
# Combine the venue_city and venue_state columns
sales6 <- unite(data = sales5, col = venue_city_state, venue_city, venue_state, sep = ", ", remove = TRUE)
# View the head of sales6
head(sales6)
# Import mbta.xlsx and skip first row: mbta
mbta <- read_excel(path = "data/mbta.xlsx", skip = 1)
library(tidyverse)
library(readxl)
# Import mbta.xlsx and skip first row: mbta
mbta <- read_excel(path = "data/mbta.xlsx", skip = 1)
head(mbta)
glimpse(mbta)
# View the structure of mbta
str(mbta)
# View the first 6 rows of mbta
head(mbta, n = 6)
# View a summary of mbta
summary(mbta)
# View the first 6 rows of mbta
head(mbta, n = 6)
# View the first 6 rows of mbta
head(mbta, n = 7)
# Remove rows 1, 7, and 11 of mbta: mbta2
mbta2 <- mbta[-c(1,7, 11), ]
# Remove the first column of mbta2: mbta3
mbta3 <- mbta2[, -1]
?gather
# Remove rows 1, 7, and 11 of mbta: mbta2
mbta2 <- mbta[-c(1,7, 11), ]
# Remove the first column of mbta2: mbta3
mbta3 <- mbta2[, -1]
# Gather columns of mbta3: mbta4
mbta4 <- gather(mbta3, key = "month", value = "thou_riders", -mode)
# View the head of mbta4
head(mbta4)
# Coerce thou_riders to numeric
mbta4$thou_riders <- as.numeric(mbta4$thou_riders)
?spread
mbta4
# Spread the contents of mbta4: mbta5
mbta5 <- spread(mbta4, key = "mode", value = "thou_riders")
# View the head of mbta5
head(mbta5)
# Spread the contents of mbta4: mbta5
mbta5 <- spread(mbta4, key = "mode", value = "thou_riders")
# View the head of mbta5
head(mbta5)
# Split month column into month and year: mbta6
mbta6 <- separate(mbta5, month, c("year", "month"),  sep ="-")
# View the head of mbta6
head(mbta6)
View(mbta3)
View(mbta5)
View(mbta4)
