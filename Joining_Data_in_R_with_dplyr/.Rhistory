"Aerosmith                ",  "Aerosmith         ",   1973,
"Rumours                  ",  "Fleetwood Mac     ",   1977,
"Hotel California         ",  "Eagles            ",   1982) %>%
map_dbl(trimws)
# create albums
albums <- tribble(~album, ~band, ~year,
"A Hard Day's Night       ",  "The Beatles       ",   1964,
"Magical Mystery Tour     ",  "The Beatles       ",   1967,
"Beggar's Banquet         ",  "The Rolling Stones",   1968,
"Abbey Road               ",  "The Beatles       ",   1969,
"Led Zeppelin IV          ",  "Led Zeppelin      ",   1971,
"The Dark Side of the Moon",  "Pink Floyd        ",   1973,
"Aerosmith                ",  "Aerosmith         ",   1973,
"Rumours                  ",  "Fleetwood Mac     ",   1977,
"Hotel California         ",  "Eagles            ",   1982)
albums <- data.frame(lapply(albums, trimws), stringsAsFactors = FALSE)
albums
# (d) Create "bands"
bands <- tribble(~first, ~last, ~band,
"John     ",  "Bonham   ", "Led Zeppelin      ",
"John Paul",  "Jones    ", "Led Zeppelin      ",
"Jimmy    ",  "Page     ", "Led Zeppelin      ",
"Robert   ",  "Plant    ", "Led Zeppelin      ",
"George   ",  "Harrison ", "The Beatles       ",
"John     ",  "Lennon   ", "The Beatles       ",
"Paul     ",  "McCartney", "The Beatles       ",
"Ringo    ",  "Starr    ", "The Beatles       ",
"Jimmy    ",  "Buffett  ", "The Coral Reefers ",
"Mick     ",  "Jagger   ", "The Rolling Stones",
"Keith    ",  "Richards ", "The Rolling Stones",
"Charlie  ",  "Watts    ", "The Rolling Stones",
"Ronnie   ",  "Wood     ", "The Rolling Stones")
# remove whitespace
bands <- data.frame(lapply(bands, trimws), stringsAsFactors = FALSE)
bands
albums
albums %>%
# Collect the albums made by a band
semi_join(bands, by = "band") %>%
# Count the albums made by a band
nrow
# find artists with songs
artists %>%
semi_join(songs, by = c("first", "last"))
albums %>%
# Collect the albums made by a band
semi_join(bands, by = "band") %>%
# Count the albums made by a band
nrow()
knitr::opts_chunk$set(echo = TRUE)
# (a) create a dataframe of songs
songs <- tibble(song = c("Come Together", "Dream On", "Hello, Goodbye", "It's Not Unusual"),
album = c("Abbey Road", "Aerosmith", "Magical Mystery Tour", "Along Came Jonnes"),
first = c("John", "Steven", "Paul", "Tom"),
last = c("Lennon", "Tyler", "McCartney", "Jones"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
# (a) create a dataframe of songs
songs <- tibble(song = c("Come Together", "Dream On", "Hello, Goodbye", "It's Not Unusual"),
album = c("Abbey Road", "Aerosmith", "Magical Mystery Tour", "Along Came Jonnes"),
first = c("John", "Steven", "Paul", "Tom"),
last = c("Lennon", "Tyler", "McCartney", "Jones"))
# (b) Create the dataframe of artists
artists <- tribble(~first, ~last, ~instrument,
"Jimmy",   "Buffett",  "Guitar",
"George", "Harrison ",  "Guitar",
"Mick  ", "Jagger",  "Vocals",
"Tom   ", "Jones",  "Vocals",
"Davy  ", "Jones",  "Vocals",
"John  ", "Lennon",  "Guitar",
"Paul  ", "McCartney",  "Bass  ",
"Jimmy ", "Page",  "Guitar",
"Joe   ", "Perry",  "Guitar",
"Elvis ", "Presley  ",  "Vocals",
"Keith ", "Richards ",  "Guitar",
"Paul  ", "Simon    ",  "Guitar",
"Ringo ", "Starr    ",  "Drums ",
"Joe   ", "Walsh    ",  "Guitar",
"Brian ", "Wilson   ",  "Vocals",
"Nancy ", "Wilson   ",  "Vocals")
# removing whitespace
artists <- data.frame(lapply(artists, trimws), stringsAsFactors = FALSE)
# (c) create albums
albums <- tribble(~album, ~band, ~year,
"A Hard Day's Night       ",  "The Beatles       ",   1964,
"Magical Mystery Tour     ",  "The Beatles       ",   1967,
"Beggar's Banquet         ",  "The Rolling Stones",   1968,
"Abbey Road               ",  "The Beatles       ",   1969,
"Led Zeppelin IV          ",  "Led Zeppelin      ",   1971,
"The Dark Side of the Moon",  "Pink Floyd        ",   1973,
"Aerosmith                ",  "Aerosmith         ",   1973,
"Rumours                  ",  "Fleetwood Mac     ",   1977,
"Hotel California         ",  "Eagles            ",   1982)
# remove whitespace
albums <- data.frame(lapply(albums, trimws), stringsAsFactors = FALSE)
# (d) Create "bands"
bands <- tribble(~first, ~last, ~band,
"John     ",  "Bonham   ", "Led Zeppelin      ",
"John Paul",  "Jones    ", "Led Zeppelin      ",
"Jimmy    ",  "Page     ", "Led Zeppelin      ",
"Robert   ",  "Plant    ", "Led Zeppelin      ",
"George   ",  "Harrison ", "The Beatles       ",
"John     ",  "Lennon   ", "The Beatles       ",
"Paul     ",  "McCartney", "The Beatles       ",
"Ringo    ",  "Starr    ", "The Beatles       ",
"Jimmy    ",  "Buffett  ", "The Coral Reefers ",
"Mick     ",  "Jagger   ", "The Rolling Stones",
"Keith    ",  "Richards ", "The Rolling Stones",
"Charlie  ",  "Watts    ", "The Rolling Stones",
"Ronnie   ",  "Wood     ", "The Rolling Stones")
# remove whitespace
bands <- data.frame(lapply(bands, trimws), stringsAsFactors = FALSE)
bands %>%
left_join(artists, by = c("first", "last"))
songs %>%
inner_join(albums, by = "album")
artists %>%
full_join(bands, by = c("first", "last"))
artists
bands
read_csv("data/jimi_hendrix.zip/jimi_hendirx/jimi1.csv")
# just a list of files inside master.zip
master <- as.character(unzip("data/jimi_hendrix.zip", list = TRUE)$Name)
master
read_csv(unz("data/jimi_hendrix.zip",  "jimi_hendrix/jimi1.csv"))
`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  "jimi_hendrix/jimi1.csv"))
# list files inside a zip file
master <- as.character(unzip("data/jimi_hendrix.zip", list = TRUE)$Name)
master
`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3]))
# list files inside a zip file
master <- as.character(unzip("data/jimi_hendrix.zip", list = TRUE)$Name)
# read files from the zip files
`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3]))
"data/jimi_hendrix.zip/jimi_hendirx/jimi1.csv")
# list files inside a zip file
master <- as.character(unzip("data/jimi_hendrix.zip", list = TRUE)$Name)
# read files from the zip files
`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3]))
master[3]
`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3]))
`Are You Experienced`
my_list <- list(`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3])),
`Axis: Bold As Love` <- read_csv(unz("data/jimi_hendrix.zip",  master[4])),
`Electric Ladyland` <- read_csv(unz("data/jimi_hendrix.zip",  master[5])))
my_list
my_list <- list(`Are You Experienced` <- read_csv(unz("data/jimi_hendrix.zip",  master[3])),
`Axis: Bold As Love` <- read_csv(unz("data/jimi_hendrix.zip",  master[4])),
`Electric Ladyland` <- read_csv(unz("data/jimi_hendrix.zip",  master[5])))
my_list
jimi <- list(`Are You Experienced` = read_csv(unz("data/jimi_hendrix.zip",  master[3])),
`Axis: Bold As Love` = read_csv(unz("data/jimi_hendrix.zip",  master[4])),
`Electric Ladyland` = read_csv(unz("data/jimi_hendrix.zip",  master[5])))
jimi %>%
bind_rows(.id = "album")
master
# read files from the zip files
discography <- read_csv(unz("data/jimi_hendrix.zip", master[2]))
jimi <- list(`Are You Experienced` = read_csv(unz("data/jimi_hendrix.zip",  master[3])),
`Axis: Bold As Love` = read_csv(unz("data/jimi_hendrix.zip",  master[4])),
`Electric Ladyland` = read_csv(unz("data/jimi_hendrix.zip",  master[5])))
jimi %>%
# Bind jimi into a single data frame
bind_rows(.id = "album") %>%
# Make a complete data frame
left_join(discography, by = "album")
# list files inside a zip file
dir("data/")
master <- as.character(unzip("data/hank_williams.zip"", list = TRUE)$Name)
master <- as.character(unzip("data/hank_williams.zip", list = TRUE)$Name)
master
unzip("data/hank_williams.zip", master[1])
# read files from the zip files without unzip
hank_charts <- read_csv(unzip("data/hank_williams.zip", master[1]))
master
# list files inside a zip file
dir("data/")
master <- as.character(unzip("data/hank_williams.zip", list = TRUE)$Name)
# read files from the zip files without unzip
hank_charts <- read_csv(unzip("data/hank_williams.zip", master[1]))
hank_years <- read_csv(unzip("data/hank_williams.zip", master[2]))
hank_years
hank_charts
hank_years %>%
# Reorder hank_years alphabetically by song title
arrange(song) %>%
# Select just the year column
select(year) %>%
# Bind the year column
bind_cols(hank_charts) %>%
# Arrange the finished dataset
arrange(year, song)
dir("data/")
# create three vectors for the following excericises
hank_year <- hank_years$year
hank_song <- hank_years$song
# create three vectors for the following excericises
hank_year <- hank_years$year
hank_song <- hank_years$song
hank_peak <- hank_charts$peak
# Make combined data frame using data_frame()
data_frame(year = hank_year,
song = hank_song,
peak = hank_peak ) %>%
# Extract songs where peak equals 1
filter(peak == 1)
?min_rank
knitr::opts_chunk$set(echo = TRUE)
# (a) create a dataframe of songs
songs <- tibble(song = c("Come Together", "Dream On", "Hello, Goodbye", "It's Not Unusual"),
album = c("Abbey Road", "Aerosmith", "Magical Mystery Tour", "Along Came Jonnes"),
first = c("John", "Steven", "Paul", "Tom"),
last = c("Lennon", "Tyler", "McCartney", "Jones"))
library(dplyr)
library(tidyverse)
# (a) create a dataframe of songs
songs <- tibble(song = c("Come Together", "Dream On", "Hello, Goodbye", "It's Not Unusual"),
album = c("Abbey Road", "Aerosmith", "Magical Mystery Tour", "Along Came Jonnes"),
first = c("John", "Steven", "Paul", "Tom"),
last = c("Lennon", "Tyler", "McCartney", "Jones"))
# (b) Create the dataframe of artists
artists <- tribble(~first, ~last, ~instrument,
"Jimmy",   "Buffett",  "Guitar",
"George", "Harrison ",  "Guitar",
"Mick  ", "Jagger",  "Vocals",
"Tom   ", "Jones",  "Vocals",
"Davy  ", "Jones",  "Vocals",
"John  ", "Lennon",  "Guitar",
"Paul  ", "McCartney",  "Bass  ",
"Jimmy ", "Page",  "Guitar",
"Joe   ", "Perry",  "Guitar",
"Elvis ", "Presley  ",  "Vocals",
"Keith ", "Richards ",  "Guitar",
"Paul  ", "Simon    ",  "Guitar",
"Ringo ", "Starr    ",  "Drums ",
"Joe   ", "Walsh    ",  "Guitar",
"Brian ", "Wilson   ",  "Vocals",
"Nancy ", "Wilson   ",  "Vocals")
# removing whitespace
artists <- data.frame(lapply(artists, trimws), stringsAsFactors = FALSE)
# (c) create albums
albums <- tribble(~album, ~band, ~year,
"A Hard Day's Night       ",  "The Beatles       ",   1964,
"Magical Mystery Tour     ",  "The Beatles       ",   1967,
"Beggar's Banquet         ",  "The Rolling Stones",   1968,
"Abbey Road               ",  "The Beatles       ",   1969,
"Led Zeppelin IV          ",  "Led Zeppelin      ",   1971,
"The Dark Side of the Moon",  "Pink Floyd        ",   1973,
"Aerosmith                ",  "Aerosmith         ",   1973,
"Rumours                  ",  "Fleetwood Mac     ",   1977,
"Hotel California         ",  "Eagles            ",   1982)
# remove whitespace
albums <- data.frame(lapply(albums, trimws), stringsAsFactors = FALSE)
# (d) Create "bands"
bands <- tribble(~first, ~last, ~band,
"John     ",  "Bonham   ", "Led Zeppelin      ",
"John Paul",  "Jones    ", "Led Zeppelin      ",
"Jimmy    ",  "Page     ", "Led Zeppelin      ",
"Robert   ",  "Plant    ", "Led Zeppelin      ",
"George   ",  "Harrison ", "The Beatles       ",
"John     ",  "Lennon   ", "The Beatles       ",
"Paul     ",  "McCartney", "The Beatles       ",
"Ringo    ",  "Starr    ", "The Beatles       ",
"Jimmy    ",  "Buffett  ", "The Coral Reefers ",
"Mick     ",  "Jagger   ", "The Rolling Stones",
"Keith    ",  "Richards ", "The Rolling Stones",
"Charlie  ",  "Watts    ", "The Rolling Stones",
"Ronnie   ",  "Wood     ", "The Rolling Stones")
# remove whitespace
bands <- data.frame(lapply(bands, trimws), stringsAsFactors = FALSE)
?semi_join
artists
songs
# find artists with songs
artists %>%
semi_join(songs, by = c("first", "last"))
artists
bands
# Return rows of artists that don't have bands info
artists %>%
anti_join(bands, by = c("first", "last"))
band_members
band_instruments
band_members
band_instruments
# "Mutating" joins combine variables from the LHS and RHS
band_members %>% inner_join(band_instruments)
# "Mutating" joins combine variables from the LHS and RHS
band_members %>% inner_join(band_instruments, by = "name")
band_members %>% left_join(band_instruments, by = "name")
band_members %>% right_join(band_instruments, by = "name"
band_members %>% right_join(band_instruments, by = "name")
band_instruments
band_members
band_members %>% right_join(band_instruments, by = "name")
band_members %>% full_join(band_instruments, by = "name")
# "Filtering" joins keep cases from the LHS
band_members %>% semi_join(band_instruments)
# "Filtering" joins keep cases from the LHS
band_members %>% semi_join(band_instruments, by = "name")
band_members %>% anti_join(band_instruments, by = "name")
band_members
band_instruments
# "Filtering" joins keep cases from the LHS
band_members %>% semi_join(band_instruments, by = "name")
band_members
band_instruments2
# Use a named `by` if the join variables have different names
band_members %>% full_join(band_instruments2, by = c("name" = "artist"))
?union()
# (a) Create two test data sets
mtcars$model <- rownames(mtcars)
rownames(mtcars)
first <- mtcars[1:20, ]
second <- mtcars[10:32, ]
intersect(first, second)
first
# (a) Create two test data sets
mtcars$model <- rownames(mtcars)
first <- mtcars[1:20, ]
second <- mtcars[10:32, ]
first
second
intersect(first, second)
# (a) Create two test data sets
mtcars$model <- rownames(mtcars)
first <- mtcars[1:20, ]
second <- mtcars[10:32, ]
second
# (a) Create two test data sets
mtcars$model <- rownames(mtcars)
mtcars
# (a) Create two test data sets
mtcars %>%
mutate( model = rownames) %>%
select(model, everything())
# (a) Create two test data sets
mtcars %>%
mutate( model = rownames()) %>%
select(model, everything())
# (a) Create two test data sets
mtcars %>%
mutate(model = rownames(.)) %>%
select(model, everything())
# (a) Create two test data sets
mtcars %>%
add_rownames()
mtcars %>%
rownames_to_column()
# (a) Create two test data sets
mtcars %>%
rownames_to_column(var = "model")
# (a) Create two test data sets
mtcars <- mtcars %>%
select(-model)
# (a) Create two test data sets
mtcars_new <- mtcars %>%
rownames_to_column(var = "model")
mtcars_new
# (a) Create two test data sets
mtcars_new <- mtcars %>%
rownames_to_column(var = "model")
first <- mtcars_new[1:20, ]
second <- mtcars_new[10:32, ]
# (b) return 10:20
intersect(first, second)
first <- mtcars_new[1:20, ]
first
# (b) return 10:20
intersect(first, second)
# (c) return 1:32
union(first, second)
setdiff(first, second)
setdiff(second, first)
second
setdiff(second, first)
setdiff(first, second)
second
# (e) return 21:32
setdiff(second, first)
#
union_all(first, second)
first
#
union_all(first, second) %>%
filter(model == "Merc 280")
#
(union_all(first, second)) %>%
filter(model == "Merc 280")
setequal(mtcars, mtcars[32:1, ])
library(tibble)
stage_songs
dir("data/")
colnames(mtcars)
rownames(mtcars)
mtcars %>%
rownames_to_column(var = "model")
df1 <- mtcars %>%
rownames_to_column(var = "model") %>%
select(model, mpg)
# create a new data frame
df2 <- mtcars[, 4:5]
df2
# create a key for df2, then left join with df1
df2 %>%
rownames_to_column(var = "model")
# create a key for df2, then left join with df1
df2 %>%
rownames_to_column(var = "model")  %>%
left_join(df1, by = "model")
df1 <- mtcars %>%
rownames_to_column(var = "model") %>%
select(model, mpg)
mtcars %>%
rownames_to_column(var = "model")
df1 <- df %>% select(model:disp) %>% head(n = 5)
df %>% select(model:disp)
df
df_my <- mtcars %>%
rownames_to_column(var = "model")
df_my
df_my %>% select(model:disp)
df_my %>% select(model:disp) %>% head(n = 5)
df_my
df2 <- df_my %>% select(model, v3) %>% head(n = 5)
df_my
df2 <- df_my %>% select(model, vs) %>% head(n = 5)
union_all(df2, df2)
df3 <- union_all(df2[1:3], df2[2:5])
df3 <- union_all(df2[1:3, ], df2[2:5, ])
df3
df3 <- union_all(df2[1:3, ], df2[2:5, ]) %>% arrange(model)
df3
df1 %>%
left_join(df3, by = "model")
?reduce
1:3 %>% reduce(`+`)
1:10 %>% reduce(`*`)
paste2 <- function(x, y, sep = ".") str_c(x, y, sep = sep)
letters[1:4]
letters[1:4] %>% reduce(paste2)
letters[1:4] %>% reduce2(c("-", ".", "-"), paste2)
samples <- rerun(2)
rerun(2)
?rerun
samples <- rerun(2, sample(10, 5))
samples
reduce(samples, union)
reduce(samples, union_all)
reduce(samples, intersect)
x <- list(c(0,1), c(2,3), c(4,5))
x %>% reduce(c)
x %>% reduce_right(c)
install.packages("Lahman")
#install.packages("Lahman")
library(Lahman)
#install.packages("Lahman")
library(Lahman)
#install.packages("Lahman")
library(Lahman)
Lahman
ls("Lahman:datasets")
install.packages("Lahman")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("Lahman")
library(Lahman)
data(package = "Lahman")
ls("Lahman:datasets")
#install.packages("Lahman")
library(Lahman)
data(package = "Lahman")
tibble(data(package = "Lahman")$results)
data.frame(data(package = "Lahman")$results)
d <- data.frame(data(package = "Lahman")$results)
d
data(d$Item[1])
d
d$Item
d$Item[1]
d$Item
d$Item[1]
d
d$Item <- as.character(d$Item)
d$Item[1]
data(d$Item[1])
d$Item[1]
dataStr <- function(package="datasets", ...)
{
d <- data(package=package, envir=new.env(), ...)$results[,"Item"]
d <- sapply(strsplit(d, split=" ", fixed=TRUE), "[", 1)
d <- d[order(tolower(d))]
for(x in d){ message(x, ":  ", class(get(x))); message(str(get(x)))}
}
dataStr <- function(package="Lahman", ...)
{
d <- data(package=package, envir=new.env(), ...)$results[,"Item"]
d <- sapply(strsplit(d, split=" ", fixed=TRUE), "[", 1)
d <- d[order(tolower(d))]
for(x in d){ message(x, ":  ", class(get(x))); message(str(get(x)))}
}
dataStr()
data_path <- "C:/Users/qfli/Desktop/instacart_online_grocery_shopping_2017_05_01.tar.gz"
file.exists(data_path)
mydata <- read.table(unz(data_path, ""C:/Users/qfli/Desktop/mydata.dat"))
mydata <- read.table(unz(data_path, "C:/Users/qfli/Desktop/mydata.dat"))
x <- archive::archive_read(archive = data_path , file = "C:/Users/qfli/Desktop/mydata.dat")
install.packages("archive")
install.packages("archives")
untar(data_path)
install.packages("archive")
devtools::install_github("jimhester/archive")
